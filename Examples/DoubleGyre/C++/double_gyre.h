
#ifndef DOUBLE_GYRE_H
#define DOUBLE_GYRE_H

#include <vector>

namespace double_gyre
{

class DoubleGyre
{
    /*An animated vector field generated by a math expression

    Attributes
    ----------
    resolution : int, int
        the number of grid points on the I and J axis
    */
  public:
    DoubleGyre() {iteration = 0;};
    void AllocateGrid(int xresolution, int yresolution);
    
    void compute_step(void);
    
    int iteration;  // current iteration number
    float timestep, A, w, E;
    int xres, yres;
    float grid_bounds[4] = {0.0, 2.0, 0.0, 1.0};
    std::vector<float> vel_x;
    std::vector<float> vel_y;
    std::vector<float> vel_z;
    std::vector<float> xaxis;
    std::vector<float> yaxis;
};

extern DoubleGyre simulation;
}

#endif // DOUBLE_GYRE_H
